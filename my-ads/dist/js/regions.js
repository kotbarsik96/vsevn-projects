const liTemplate=document.createElement("li");liTemplate.classList.add("region__body--item"),liTemplate.innerHTML='\n    <input class="input-region input-region-item" type="checkbox" name="region-item">\n    <label class="region-multi"></label>\n';const categoryTemplate=document.createElement("li");categoryTemplate.classList.add("punkt__group--item"),categoryTemplate.innerHTML='\n    <input class="input-punkt-group punkt-group-item punkt-item" type="checkbox" name="punkt-group-item">\n    <label class="region-multi punkt-group punkt-bold"></label>\n';const regionCitiesTemplate=document.createElement("li");regionCitiesTemplate.classList.add("punkt__region--item"),regionCitiesTemplate.innerHTML='\n    <input class="input-punkt-region punkt-region-item" type="checkbox" name="punkt-region-item">\n    <label class="region-multi punkt-region punkt-bold"></label>\n    <ul class="punkt__region--ul multi"></ul>\n';const searchCitiesContainer=document.querySelector(".choose__region .choose__quick-search .cities-container"),searchCitiesList=searchCitiesContainer.querySelector("ul"),searchCityField=document.querySelector(".choose__region .choose__quick-search input"),searchCitySubmitBtn=document.querySelector(".choose__region .submit"),searchCityCover=document.querySelector(".choose__region--cover");let searchCities=[],searchCitiesChecked=[];function initSearchCities(){searchCitiesNames.forEach(((e,i)=>{const t=liTemplate.cloneNode(!0),c=t.querySelector(".region-multi"),s=t.querySelector(".input-region");s.setAttribute("id",`search-city_${i}`),c.setAttribute("for",`search-city_${i}`),t.classList.add("search-city--hidden"),t.setAttribute("data-name",e),c.addEventListener("click",(()=>{const i=!s.checked,t=e.slice(0,e.indexOf("(")).trim();i&&!searchCitiesChecked.includes(t)?searchCitiesChecked.push(t):!i&&searchCitiesChecked.includes(t)&&searchCitiesChecked.splice(searchCitiesChecked.indexOf(t),1)})),searchCities.push(t)}));for(const e of searchCities)searchCitiesList.appendChild(e);searchCitySubmitBtn.addEventListener("click",(()=>{for(const e of regions){let i=!1;for(const t of searchCitiesChecked){if(e.mainCity.label.textContent.trim()===t){e.checkbox.checked||e.switch(!0,!0),e.mainCity.checkbox.checked||e.switchMainCity(!0,!0),searchCitiesChecked.splice(searchCitiesChecked.indexOf(t),1),i=!0;break}let c=e.cities.list.find((e=>e.label.textContent.trim()===t));if(c){e.checkbox.checked||e.switch(!0,!0),c.checkbox.checked||c.switch(!0,!0),searchCitiesChecked.splice(searchCitiesChecked.indexOf(t),1),i=!0;break}}!i&&e.checkbox.checked&&e.switch(!1,!0)}updateCitiesMainItem(),searchCityCover.classList.add("hidden"),searchCitiesContainer.classList.add("search-city-container--hidden"),searchCityField.value="",searchCityField.parentNode.parentNode.setAttribute("data-empty","true")}))}function performCitySearch(e){e=e.toLowerCase().trim();const i=searchCities.filter((i=>e.length&&i.getAttribute("data-name").toLowerCase().trim().startsWith(e)));if(i.length){searchCityCover.classList.remove("hidden"),searchCitiesContainer.classList.remove("search-city-container--hidden");for(const t of searchCities)if(i.includes(t)){const i=t.getAttribute("data-name").trim();t.querySelector(".region-multi").innerHTML=highlightText(i,e),t.classList.remove("search-city--hidden"),citiesChecked.find((e=>e.label.textContent.trim()===i))?(t.querySelector("input").checked=!0,searchCitiesChecked.includes(i)||searchCitiesChecked.push(i)):(t.querySelector("input").checked=!1,searchCitiesChecked.includes(i)&&searchCitiesChecked.splice(searchCitiesChecked.indexOf(i),1))}else t.classList.add("search-city--hidden")}else searchCityCover.classList.add("hidden"),searchCitiesContainer.classList.add("search-city-container--hidden")}function highlightText(e,i){const t=e.match(new RegExp(i,"ig"))[0];return e=e.replace(t,`<span class="highlight">${t}</span>`)}searchCitiesContainer.classList.add("search-city-container--hidden"),searchCityField.addEventListener("input",(()=>performCitySearch(searchCityField.value))),document.querySelector(".choose__region .choose__quick-search .cross").addEventListener("click",(()=>performCitySearch("")));const chooseRegion=document.querySelector(".choose__region"),submitRegionBtn=document.querySelector(".region__apply"),regionList=document.querySelector(".choose__region .region__body--ul"),chooseRegionClose=document.querySelector(".choose__region--close"),clearRegionsBtn=document.querySelector(".choose__region--region .region__title--reset"),clearCitiesBtn=document.querySelector(".choose__region--punkt .region__title--reset"),mainCityList=document.querySelector(".punkt__group"),regionCityList=document.querySelector(".punkt__region"),regionsMainLabel=document.querySelector(".region-all"),regionsMainCheckbox=document.querySelector(".input-region-all"),citiesMainItem=document.querySelector(".punkt__all"),citiesMainCheckbox=document.querySelector(".punkt__all input"),citiesMainLabel=document.querySelector(".punkt__all label"),regions=[],regionsChecked=[],citiesChecked=[];let regionsTotal,citiesTotal,submitCallback,searchCitiesNames=[];function setupRegion(e){e.switchCities=setupRegionCities(e.cities.controller,e.cities.list),e.switchMainCity=(i,t=!1)=>{i&&!citiesChecked.includes(e.mainCity)?citiesChecked.push(e.mainCity):!i&&citiesChecked.includes(e.mainCity)&&citiesChecked.splice(citiesChecked.indexOf(e.mainCity),1),t?e.mainCity.checkbox.checked=i:updateCitiesMainCheckbox(),updateClearBtns()},e.switch=(i,t=!1)=>{i&&!regionsChecked.includes(e)?regionsChecked.push(e):!i&&regionsChecked.includes(e)&&regionsChecked.splice(regionsChecked.indexOf(e),1),t?e.checkbox.checked=i:updateRegionsMainCheckbox(),e.cities.container.classList.remove("hide-block"),i?(e.cities.container.classList.remove("hide-block"),e.mainCity.container.classList.remove("hide-block")):(e.cities.container.classList.add("hide-block"),e.mainCity.container.classList.add("hide-block"),e.switchCities(!1),e.switchMainCity(!1,!0)),updateClearBtns()},e.label.addEventListener("click",(()=>{e.switch(!e.checkbox.checked),updateCitiesMainItem()})),e.mainCity.label.addEventListener("click",(()=>e.switchMainCity(!e.mainCity.checkbox.checked)))}function setupRegionCities(e,i){let t=0;const c=(e,i,c=!1)=>{c&&(e.checkbox.checked=i),i&&!citiesChecked.includes(e)?(citiesChecked.push(e),t++):!i&&citiesChecked.includes(e)&&(citiesChecked.splice(citiesChecked.indexOf(e),1),t--)},s=()=>{e.checkbox.checked=t>0&&t===i.length},n=e=>{for(const t of i)c(t,e,!0)};e.label.addEventListener("click",(()=>{n(!e.checkbox.checked),updateClearBtns(),updateCitiesMainCheckbox()}));for(const e of i)e.switch=function(i=!1){c(e,!e.checkbox.checked,i),s(),updateClearBtns(),updateCitiesMainCheckbox()},e.label.addEventListener("click",(()=>{e.switch()}));return function(e){n(e),s(),updateClearBtns()}}function initRegions(e){regionsTotal=e.length,citiesTotal=e.reduce(((e,i)=>e+=i.cities.length),0);const i=e.reduce(((e,i)=>{e.mainCities.push(`${i.main_city} (${i.name})`);for(const t of i.cities)e.cities.push(`${t} (${i.name})`);return e}),{mainCities:[],cities:[]});for(const e of i.mainCities)searchCitiesNames.push(e);for(const e of i.cities)searchCitiesNames.push(e);initSearchCities();let t=0;for(const[i,c]of e.entries()){const e={},s=liTemplate.cloneNode(!0),n=s.querySelector("label"),o=s.querySelector("input");n.textContent=c.name,o.setAttribute("id",`region-item-${i}`),n.setAttribute("for",`region-item-${i}`),regionList.appendChild(s),e.label=n,e.checkbox=o;const r=categoryTemplate.cloneNode(!0),a=r.querySelector("label"),l=r.querySelector("input");a.textContent=c.main_city,l.setAttribute("id",`center-city-item-${i}`),a.setAttribute("for",`center-city-item-${i}`),r.classList.add("hide-block"),mainCityList.appendChild(r),e.mainCity={},e.mainCity.container=r,e.mainCity.label=a,e.mainCity.checkbox=l;const d=regionCitiesTemplate.cloneNode(!0),h=d.querySelector("label"),u=d.querySelector("input"),C=d.querySelector("ul");d.classList.add("hide-block"),u.setAttribute("id",`region-cities-${i}`),h.setAttribute("for",`region-cities-${i}`),regionCityList.appendChild(d),e.cities={},e.cities.container=d,e.cities.controller={},e.cities.controller.label=h,e.cities.controller.checkbox=u,e.cities.list=[],h.textContent=c.name;for(const[i,s]of c.cities.entries()){const i=liTemplate.cloneNode(!0),c=i.querySelector("label"),n=i.querySelector("input");n.setAttribute("id",`region-city-${t}`),c.setAttribute("for",`region-city-${t}`),t++,c.textContent=s,C.appendChild(i),e.cities.list.push({label:c,checkbox:n})}regions.push(e),setupRegion(e)}}function updateClearBtns(){regionsChecked.length>0?clearRegionsBtn.classList.add("active"):clearRegionsBtn.classList.remove("active"),citiesChecked.length>0?clearCitiesBtn.classList.add("active"):clearCitiesBtn.classList.remove("active")}function updateCitiesMainItem(){regionsChecked.length>0?citiesMainItem.classList.remove("hide-block"):citiesMainItem.classList.add("hide-block")}function updateRegionsMainCheckbox(){regionsMainCheckbox.checked=regionsChecked.length===regionsTotal}function updateCitiesMainCheckbox(){const e=regionsChecked.reduce(((e,i)=>e+=i.cities.list.length+1),0);citiesMainCheckbox.checked=e>0&&e===citiesChecked.length}function showChooseRegionPopup(e){chooseRegion.classList.remove("up-block"),cover.classList.remove("hidden"),cover.classList.add("bg-dark"),cover.classList.add("on-top"),submitCallback=e}function closeRegions(){chooseRegion.classList.add("up-block"),cover.classList.add("hidden"),cover.classList.remove("bg-dark"),cover.classList.remove("on-top");const e=regionsChecked.reduce(((e,i)=>(e.push(i.label.textContent.trim()),e)),[]),i=citiesChecked.reduce(((e,i)=>(e.push(i.label.textContent.trim()),e)),[]);try{submitCallback(e,i)}catch(e){console.error(e)}}fetch("regions.json").then((e=>e.json())).then(initRegions),regionsMainLabel.addEventListener("click",(()=>{const e=!regionsMainCheckbox.checked;for(const i of regions)i.switch(e,!0);updateCitiesMainItem()})),citiesMainLabel.addEventListener("click",(()=>{const e=!citiesMainCheckbox.checked;for(const i of regionsChecked)i.switchMainCity(e,!0),i.switchCities(e)})),clearRegionsBtn.addEventListener("click",(()=>{for(;regionsChecked.length>0;){regionsChecked.pop().switch(!1,!0)}updateClearBtns(),updateRegionsMainCheckbox(),updateCitiesMainItem(),updateCitiesMainCheckbox()})),clearCitiesBtn.addEventListener("click",(()=>{for(const e of regionsChecked)e.switchMainCity(!1,!0),e.switchCities(!1);updateCitiesMainCheckbox()})),submitRegionBtn.addEventListener("click",(()=>{closeRegions()})),cover.addEventListener("click",(()=>{chooseRegion.classList.contains("up-block")||closeRegions()})),chooseRegionClose.onclick=()=>closeRegions();